<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teach.mapper.MusicMapper">
  <resultMap id="BaseResultMap" type="com.teach.entity.Music">
    <id column="music_id" jdbcType="VARCHAR" property="musicId" />
    <result column="music_singer_id" jdbcType="VARCHAR" property="musicSingerId" />
    <result column="music_album_id" jdbcType="VARCHAR" property="musicAlbumId" />
    <result column="music_video_id" jdbcType="VARCHAR" property="musicVideoId" />
    <result column="music_emotion_id" jdbcType="INTEGER" property="musicEmotionId" />
    <result column="music_style_id" jdbcType="INTEGER" property="musicStyleId" />
    <result column="music_theme_id" jdbcType="INTEGER" property="musicThemeId" />
    <result column="music_language_id" jdbcType="INTEGER" property="musicLanguageId" />
    <result column="music_name" jdbcType="VARCHAR" property="musicName" />
    <result column="music_file" jdbcType="VARCHAR" property="musicFile" />
    <result column="music_word" jdbcType="VARCHAR" property="musicWord" />
    <result column="music_picture" jdbcType="VARCHAR" property="musicPicture" />
    <result column="music_info" jdbcType="VARCHAR" property="musicInfo" />
    <result column="music_playNum" jdbcType="INTEGER" property="musicPlaynum" />
    <result column="music_grade" jdbcType="INTEGER" property="musicGrade" />
  </resultMap>
  <sql id="Base_Column_List">
    music_id, music_singer_id, music_album_id, music_video_id, music_emotion_id, music_style_id, 
    music_theme_id, music_language_id, music_name, music_file, music_word, music_picture, 
    music_info, music_playNum, music_grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from music
    where music_id = #{musicId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from music
    where music_id = #{musicId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.teach.entity.Music">
    insert into music (music_id, music_singer_id, music_album_id, 
      music_video_id, music_emotion_id, music_style_id, 
      music_theme_id, music_language_id, music_name, 
      music_file, music_word, music_picture, 
      music_info, music_playNum, music_grade
      )
    values (#{musicId,jdbcType=VARCHAR}, #{musicSingerId,jdbcType=VARCHAR}, #{musicAlbumId,jdbcType=VARCHAR}, 
      #{musicVideoId,jdbcType=VARCHAR}, #{musicEmotionId,jdbcType=INTEGER}, #{musicStyleId,jdbcType=INTEGER}, 
      #{musicThemeId,jdbcType=INTEGER}, #{musicLanguageId,jdbcType=INTEGER}, #{musicName,jdbcType=VARCHAR}, 
      #{musicFile,jdbcType=VARCHAR}, #{musicWord,jdbcType=VARCHAR}, #{musicPicture,jdbcType=VARCHAR}, 
      #{musicInfo,jdbcType=VARCHAR}, #{musicPlaynum,jdbcType=INTEGER}, #{musicGrade,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.teach.entity.Music">
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="musicId != null">
        music_id,
      </if>
      <if test="musicSingerId != null">
        music_singer_id,
      </if>
      <if test="musicAlbumId != null">
        music_album_id,
      </if>
      <if test="musicVideoId != null">
        music_video_id,
      </if>
      <if test="musicEmotionId != null">
        music_emotion_id,
      </if>
      <if test="musicStyleId != null">
        music_style_id,
      </if>
      <if test="musicThemeId != null">
        music_theme_id,
      </if>
      <if test="musicLanguageId != null">
        music_language_id,
      </if>
      <if test="musicName != null">
        music_name,
      </if>
      <if test="musicFile != null">
        music_file,
      </if>
      <if test="musicWord != null">
        music_word,
      </if>
      <if test="musicPicture != null">
        music_picture,
      </if>
      <if test="musicInfo != null">
        music_info,
      </if>
      <if test="musicPlaynum != null">
        music_playNum,
      </if>
      <if test="musicGrade != null">
        music_grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="musicId != null">
        #{musicId,jdbcType=VARCHAR},
      </if>
      <if test="musicSingerId != null">
        #{musicSingerId,jdbcType=VARCHAR},
      </if>
      <if test="musicAlbumId != null">
        #{musicAlbumId,jdbcType=VARCHAR},
      </if>
      <if test="musicVideoId != null">
        #{musicVideoId,jdbcType=VARCHAR},
      </if>
      <if test="musicEmotionId != null">
        #{musicEmotionId,jdbcType=INTEGER},
      </if>
      <if test="musicStyleId != null">
        #{musicStyleId,jdbcType=INTEGER},
      </if>
      <if test="musicThemeId != null">
        #{musicThemeId,jdbcType=INTEGER},
      </if>
      <if test="musicLanguageId != null">
        #{musicLanguageId,jdbcType=INTEGER},
      </if>
      <if test="musicName != null">
        #{musicName,jdbcType=VARCHAR},
      </if>
      <if test="musicFile != null">
        #{musicFile,jdbcType=VARCHAR},
      </if>
      <if test="musicWord != null">
        #{musicWord,jdbcType=VARCHAR},
      </if>
      <if test="musicPicture != null">
        #{musicPicture,jdbcType=VARCHAR},
      </if>
      <if test="musicInfo != null">
        #{musicInfo,jdbcType=VARCHAR},
      </if>
      <if test="musicPlaynum != null">
        #{musicPlaynum,jdbcType=INTEGER},
      </if>
      <if test="musicGrade != null">
        #{musicGrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.teach.entity.Music">
    update music
    <set>
      <if test="musicSingerId != null">
        music_singer_id = #{musicSingerId,jdbcType=VARCHAR},
      </if>
      <if test="musicAlbumId != null">
        music_album_id = #{musicAlbumId,jdbcType=VARCHAR},
      </if>
      <if test="musicVideoId != null">
        music_video_id = #{musicVideoId,jdbcType=VARCHAR},
      </if>
      <if test="musicEmotionId != null">
        music_emotion_id = #{musicEmotionId,jdbcType=INTEGER},
      </if>
      <if test="musicStyleId != null">
        music_style_id = #{musicStyleId,jdbcType=INTEGER},
      </if>
      <if test="musicThemeId != null">
        music_theme_id = #{musicThemeId,jdbcType=INTEGER},
      </if>
      <if test="musicLanguageId != null">
        music_language_id = #{musicLanguageId,jdbcType=INTEGER},
      </if>
      <if test="musicName != null">
        music_name = #{musicName,jdbcType=VARCHAR},
      </if>
      <if test="musicFile != null">
        music_file = #{musicFile,jdbcType=VARCHAR},
      </if>
      <if test="musicWord != null">
        music_word = #{musicWord,jdbcType=VARCHAR},
      </if>
      <if test="musicPicture != null">
        music_picture = #{musicPicture,jdbcType=VARCHAR},
      </if>
      <if test="musicInfo != null">
        music_info = #{musicInfo,jdbcType=VARCHAR},
      </if>
      <if test="musicPlaynum != null">
        music_playNum = #{musicPlaynum,jdbcType=INTEGER},
      </if>
      <if test="musicGrade != null">
        music_grade = #{musicGrade,jdbcType=INTEGER},
      </if>
    </set>
    where music_id = #{musicId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teach.entity.Music">
    update music
    set music_singer_id = #{musicSingerId,jdbcType=VARCHAR},
      music_album_id = #{musicAlbumId,jdbcType=VARCHAR},
      music_video_id = #{musicVideoId,jdbcType=VARCHAR},
      music_emotion_id = #{musicEmotionId,jdbcType=INTEGER},
      music_style_id = #{musicStyleId,jdbcType=INTEGER},
      music_theme_id = #{musicThemeId,jdbcType=INTEGER},
      music_language_id = #{musicLanguageId,jdbcType=INTEGER},
      music_name = #{musicName,jdbcType=VARCHAR},
      music_file = #{musicFile,jdbcType=VARCHAR},
      music_word = #{musicWord,jdbcType=VARCHAR},
      music_picture = #{musicPicture,jdbcType=VARCHAR},
      music_info = #{musicInfo,jdbcType=VARCHAR},
      music_playNum = #{musicPlaynum,jdbcType=INTEGER},
      music_grade = #{musicGrade,jdbcType=INTEGER}
    where music_id = #{musicId,jdbcType=VARCHAR}
  </update>
</mapper>